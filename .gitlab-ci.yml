stages:
  - sync
  - test
  - coverage
  - build
  - deploy

variables:
  PYTHON_VERSION: "3.9"

image: python:${PYTHON_VERSION}

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - echo "🛠️ Setting up the environment..."
  - python -m venv venv
  - source venv/bin/activate
  - pip install --upgrade pip
  - pip install hatch hatch-vcs


test:
  stage: test
  script:
    - echo "🧪 Running tests..."
    - hatch test --cover-quiet --randomize --parallel --retries 5 --retry-delay 3
  artifacts:
    paths:
      - .coverage
    expire_in: 1 day

coverage:
  stage: coverage
  needs:
    - job: test
      artifacts: true
  script:
    - echo "📊 Generating coverage report..."
    - hatch run coverage:report-xml
    - hatch run coverage:report-uncovered-html
  artifacts:
    paths:
      - htmlcov/
      - coverage.xml
    expire_in: 1 week

build:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
  script:
    - echo "🚀 my_arithmetic-antonin-rouxel deployment on develop servers"
    - echo "📦 Building the project..."
    - hatch build
    - echo "🗂️ Listing files in the dist/ directory:"
    - ls -l dist/
    - echo "📂 Copying build artifacts..."
    - mkdir -p artifacts
    - cp -r dist/ artifacts/
    - echo "🧹 Cleaning up dist/ directory after deployment..."
    - rm -rf dist/
  artifacts:
    paths:
      - artifacts/
    expire_in: 1 week

deploy:
  stage: deploy
  script:
    - echo "🚀 my_arithmetic-antonin-rouxel deployment on stable servers"
    - echo "📦 Building the project..."
    - hatch build
    - echo "🗂️ Listing files in the dist/ directory:"
    - ls -l dist/
    - echo "📂 Copying build artifacts..."
    - mkdir -p artifacts
    - cp -r dist/ artifacts/
    - echo "🧹 Cleaning up dist/ directory after deployment..."
    - rm -rf dist/
  artifacts:
    paths:
      - artifacts/
    expire_in: 1 week
  only:
    - tags

sync-with-github:
  stage: sync
  before_script:
    - echo "🔧 Configuring Git user..."
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global pull.ff only 
  script:
    - echo "🔍 Checking for GitHub remote..."
    - git remote -v | grep -w github || git remote add github $REMOTE_REPOSITORY_URL
    - echo "🔄 Setting GitHub repository URL..."
    - git remote set-url github $REMOTE_REPOSITORY_URL
    - echo "📂 Checking out main branch..."
    - git checkout main
    - echo "⬇️ Pulling updates from origin main..."
    - git pull origin main --rebase
    - echo "⬇️ Pulling updates from GitHub main..."
    - git pull github main --rebase
    - echo "📋 Checking status..."
    - git status
    - echo "🚀 Pushing changes to GitHub..."
    - git push $REMOTE_REPOSITORY_URL HEAD:main --force
    - echo "🔖 Pushing tags to GitHub..."
    - git push $REMOTE_REPOSITORY_URL --tags
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
